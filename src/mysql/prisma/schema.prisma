// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  UsuarioID           Int             @id @default(autoincrement()) @unique
  Nome                String          @db.VarChar(100)
  Email               String          @db.VarChar(100) @unique
  Senha               String          @db.VarChar(100)
  DataDeDesativacao   DateTime?
  Detalhes            UsuarioDetalhes?
  VendasPorMes        VendasPorMes[]
  NotasFiscais        NotaFiscal[]
  @@index([Email], name: "UQ_Email")
}

model UsuarioDetalhes {
  UsuarioID           Int             @id @unique
  CPF                 String          @db.VarChar(14) @unique
  Sobrenome           String          @db.VarChar(100)
  NumeroTelefone      String?         @db.VarChar(20)
  Sexo                String?         @db.VarChar(1)
  Usuario             Usuarios        @relation(fields: [UsuarioID], references: [UsuarioID])
  @@index([UsuarioID], name: "UQ_UsuarioID")
}

model VendasPorMes {
  VendasPorMesID      Int             @id @default(autoincrement())   
  Ano                 Int?
  Mes                 Int?
  TotalVendas         Float?
  Usuario             Usuarios        @relation(fields: [UsuarioID], references: [UsuarioID])
  UsuarioID           Int
  @@index([UsuarioID], name: "FK_VendasPorMes_UsuarioID")
}

model NotaFiscal {
  NotaFiscalID        Int             @id @default(autoincrement()) @unique
  NumeroNotaFiscal    String
  DataNotaFiscal      DateTime
  Valor               Float
  UsuarioID           Int             // Adicione o campo UsuarioID
  Usuario             Usuarios        @relation(fields: [UsuarioID], references: [UsuarioID])
}
